// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Ticket {
  ticketId     String        @id @default(cuid())
  holderName   String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  purchases    Purchase[]    @relation("PurchaseBuyer")
  purchasesLog PurchaseLog[] @relation("PurchaseBuyerLogging")
}

model Item {
  id           String        @id @default(cuid())
  displayName  String
  category     Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  purchases    Purchase[]    @relation("PurchaseItem")
  purchasesLog PurchaseLog[] @relation("PurchaseItemLogging")
  categoryId   String
  price        Int           @default(0)
  icon         String?

  parentItem    Item?   @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  parentId      String?
  childlrenItem Item[]  @relation("ParentChild")
}

model Category {
  id          String  @id
  displayName String
  icon        String?
  Item        Item[]
}

model PurchaseLog {
  purchaseId String   @id @default(cuid())
  buyer      Ticket   @relation("PurchaseBuyerLogging", fields: [buyerId], references: [ticketId], onDelete: Cascade)
  buyerId    String
  item       Item     @relation("PurchaseItemLogging", fields: [itemId], references: [id], onDelete: NoAction)
  itemId     String
  quantity   Int      @default(1)
  timestamp  DateTime @default(now())
}

model Purchase {
  purchaseId String   @id @default(cuid())
  buyer      Ticket   @relation("PurchaseBuyer", fields: [buyerId], references: [ticketId], onDelete: Cascade)
  buyerId    String
  item       Item     @relation("PurchaseItem", fields: [itemId], references: [id], onDelete: NoAction)
  itemId     String
  quantity   Int      @default(1)
  paid       Int      @default(0)
  timestamp  DateTime @default(now())
}
